Перем Льготники, Клиенты, ФизЛица, Выбывшие, Дома, Улицы, ТипыЛьгот, КоэфНДС,ТТХ, Каталог,  ИмяФайла;
Перем СтрПуть, СтрИмя, ДБФ, ДБУл, ПоставщикиУслуг, жрн, СпрНач, СпрЛУ, ЖрнКв, ГруппаРасчетовОплата, ГруппаРасчетовВсеНачисления;
 //--------------------------------------------------------------------------------------------------

Процедура ВыборКаталога(КаталогОтч)
	

	Если ФС.ВыбратьКаталог(КаталогОтч, "Выберите файл",) = 0 Тогда
	    КаталогОтч="";
	КонецЕсли;
	
КонецПроцедуры		//	ВыборФайла()


//--------------------------------------------------------------------------------------------------

//--------------------------------------------------------------------------------------------------

Процедура ВыборФайла(ИмяФайла, Фильтр="dbf")
	Каталог = ФС.ТекКаталог();
	
	Стр = "Файл DBF (*." + Фильтр + ")|*." + Фильтр + "";

	Если ФС.ВыбратьФайл(0,ИмяФайла , Каталог, "Выберите файл", Стр, , ) = 1 Тогда
	    ИмяФайла = Каталог + ИмяФайла;
	КонецЕсли;
	
КонецПроцедуры		//	ВыборФайла()

//--------------------------------------------------------------------------------------------------

Функция ЕстьФайл(ИмяФайла)
	фл=1;
	Если ФС.СуществуетФайл(ИмяФайла) = 1 Тогда
		Если Вопрос("Файл существует, удалить перед выгрузкой?",4)=6 Тогда
			ФС.УдалитьФайл(ИмяФайла);
			Фл=0;
		Иначе Фл=1;
		КонецЕсли;	
	Иначе Фл=0; 
	КонецЕсли;
	Возврат фл;
КонецФункции		//	ЕстьФайл()  

//__________________________________________________________________________________________

Процедура ПриНачалеВыбораЗначения(ИдЭлементаДиалога, Фл)
    
	Если (ИдЭлементаДиалога="ФормИмяФайлаДанных") Тогда          
	ВыборФайла(ФормИмяФайлаДанных, "DBF");   КонецЕсли;
	
   	Если (ИдЭлементаДиалога="ФормИмяКаталога") тогда        
		ВыборКаталога(ФормИмяКаталога); 
	//Иначе ВыборФайла(ФормИмяФайлаОтчета, "txt");
	КонецЕсли;

		
	
КонецПроцедуры		//	ПриНачалеВыбораЗначения()

//*******************************************

Функция Оплатил (Клиент,Дата1)
	чНачСальдо = 0; чОплата = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		
		Расчет    = ЖрнКв.Расчет;
		ВидРасч   = ЖрнКв.ВидРасч;
		    

		
		чСумма    = ЖрнКв.Результат; 
		чЛьгота   = ЖрнКв.СуммаЛьготы; 
		чСумма100 = чСумма + чЛьгота; 

		
		Если ГруппаРасчетовОплата.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чОплата  = чОплата + чСумма;
			Продолжить;
		КонецЕсли;
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла;
    Возврат  чОплата ;

КонецФункции  
//*******************************************

Функция ОплатилУсл (Клиент,Дата1,Услужка,код)
	чНачСальдо = 0; чОплата = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		
		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство; 
		Расчет2    = ЖрнКв.Расчет;
		Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;

		ВидРасч   = ЖрнКв.ВидРасч;
		    
		ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
	    ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
                                                
	
		
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;   
		
		//	Сообщить(ПРасчет+"/"+ПРасчет2+"/"+Услужка);
		
		

		
		чСумма    = ЖрнКв.Результат; 
		чЛьгота   = ЖрнКв.СуммаЛьготы; 
		чСумма100 = чСумма + чЛьгота;
		чДатаОпл  = СокрЛП(ЖрнКв.РодительскийДокумент.комментарий);
		чДатаОпл  = Число(Сред(чДатаОпл,9,2)); 
		вдок  = СокрЛП(ЖрнКв.РодительскийДокумент);

		Если (Найти(вдок,"асч")>0) тогда продолжить; КонецЕсли;
		Если (чДатаОпл<11) тогда продолжить; КонецЕсли;
		
		//сообщить(чДатаОпл);
        		//сообщить(вдок);

		
		Если ГруппаРасчетовОплата.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чОплата  = чОплата + чСумма;
			Продолжить;
		КонецЕсли;
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла; 
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, (Дата1+30));
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		
		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство; 
		Расчет2    = ЖрнКв.Расчет;
			Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;

		ВидРасч   = ЖрнКв.ВидРасч;
		    
		ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
	    ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
                                                
		//Сообщить(ПРасчет+"/"+ПРасчет2+"/"+Услужка);
		
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;

		
		чСумма    = ЖрнКв.Результат; 
		чЛьгота   = ЖрнКв.СуммаЛьготы; 
		чСумма100 = чСумма + чЛьгота;
		чДатаОпл  = СокрЛП(ЖрнКв.РодительскийДокумент.комментарий);
		чДатаОпл  = Число(Сред(чДатаОпл,9,2));
		вдок  = СокрЛП(ЖрнКв.РодительскийДокумент);
		
		Если (чДатаОпл>10) тогда продолжить; КонецЕсли;
		Если (Найти(вдок,"асч")>0) тогда продолжить; КонецЕсли;

		//сообщить(чДатаОпл);
		//сообщить(вдок);

		
		Если ГруппаРасчетовОплата.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чОплата  = чОплата + чСумма;
			Продолжить;
		КонецЕсли;
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла; 
	
	
	
    Возврат  чОплата ;

КонецФункции  
//*******************************************

Функция Начисляется (Клиент,Дата1)
	чНачСальдо = 0; чНачислено = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		
		чСумма    = ЖрнКв.Результат; 
		чЛьгота   = ЖрнКв.СуммаЛьготы; 
		чСумма100 = чСумма + чЛьгота; 

		Расчет    = ЖрнКв.Расчет;
		ВидРасч   = ЖрнКв.ВидРасч;
		
		Если ГруппаРасчетовВсеНачисления.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чНачислено  = чНачислено + чСумма;
			Продолжить;
		КонецЕсли;
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла;
    Возврат  чНачислено ;

КонецФункции  

//*******************************************

Функция НачисляетсяУсл (Клиент,Дата1,Услужка)
	чНачСальдо = 0; чНачислено = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл

		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство; 
		Расчет2    = ЖрнКв.Расчет;
        	Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;
		ВидРасч   = ЖрнКв.ВидРасч;
		    
		ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
	    ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
		;
                                                
		//Сообщить(ПРасчет+"/"+ПРасчет2+"/"+Услужка);
		
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;

		чСумма    = ЖрнКв.Результат; 
		чЛьгота   = ЖрнКв.СуммаЛьготы; 
		чСумма100 = чСумма + чЛьгота; 
		
		Если ГруппаРасчетовВсеНачисления.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чНачислено  = чНачислено + чСумма100;
			Продолжить;
		КонецЕсли;
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла;
    Возврат  чНачислено ;

КонецФункции  

//*******************************************

Функция ТарифУсл (Клиент,Дата1,Услужка)
	чТариф = 0; Тарифчик = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		
		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство; 
		Расчет2    = ЖрнКв.Расчет;
			Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;
		ВидРасч   = ЖрнКв.ВидРасч;
		
		ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
		ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
		
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;
		
		
		Тарифчик    = ЖрнКв.Тариф; 
		//Сообщить(ЖрнКв.Тариф);
		Если ГруппаРасчетовВсеНачисления.СодержитВидРасчета(ВидРасч) > 0 Тогда
			чТариф  = чТариф + Тарифчик;
			Продолжить;
		КонецЕсли;
		
		
		
	КонецЦикла;
	Возврат  чТариф ;
	
КонецФункции  

//*******************************************

Функция СальдоУсл (Клиент,Дата1,Услужка)
	чНачСальдо = 0; чНачислено = 0;
	
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл

		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство; 
		Расчет2    = ЖрнКв.Расчет;
        	Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;
		ВидРасч   = ЖрнКв.ВидРасч;
		    
		ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
	    ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
                                                
		//Сообщить(ПРасчет+"/"+ПРасчет2+"/"+Услужка);
		
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;
        		чСумма    = ЖрнКв.Результат; 

		
		
		Если ВидРасч = ВидРасчета.НачальноеСальдо Тогда
			чНачСальдо = чНачСальдо + чСумма; 
			Продолжить;
		КонецЕсли;

		ВидУслуги = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства;

		
		
	КонецЦикла;
    Возврат  чНачСальдо ;

КонецФункции  

//*******************************************


Функция Количество (Клиент,Дата1,Услужка)
	чНачСальдо = 0; чНачислено = 0;  чКоличество =0;
	//сообщить("вошли в количество по услуге "+Услужка+"/"+Клиент);
	ЖрнКв.ВыбратьПериодПоОбъекту(Клиент, Дата1);
	Пока ЖрнКв.ПолучитьЗапись() > 0 Цикл
		

		Расчет    = ЖрнКв.ВидТарифа.ОсновноеСвойство.ЗначениеСвойства.ДопСвойство;
		Расчет2    = ЖрнКв.Расчет;
        	Если (Расчет2.код="69") Тогда Расчет2="ОДН Элек" КонецЕсли;
		ВидРасч   = ЖрнКв.ВидРасч;
		
	    ПРасчет = Лев(ВРег(СокрЛП(Расчет)),5);
	    ПРасчет2 = Лев(ВРег(СокрЛП(Расчет2)),5);
	//	сообщить (ПРасчет+"/"+ПРасчет2+"/"+Услужка) ;
       
		
		Если (ПРасчет <> Услужка) и (ПРасчет2 <> Услужка) Тогда Продолжить; КонецЕсли;
		
			Если (ЖрнКв.Количество=0) Тогда Продолжить; КонецЕсли;
			чКоличество  = чКоличество+ЖрнКв.Количество;
		
			

		
		
	КонецЦикла; 
	//сообщить("вернули по услуге/"+чКоличество);
    Возврат  чКоличество ;

КонецФункции  

//________________________________________________________________________________________________________
Функция НайтиДом(Улицаца, НомерДома = "")
Перем ТДома, СпрДома, Дома;

Улица= СоздатьОбъект("Справочник.Улицы");	
Улица.НайтиПоНаименованию(Улицаца);
ТДома = СоздатьОбъект("ТаблицаЗначений");
	ТДома.НоваяКолонка("Элемент");
	ТДома.НоваяКолонка("НомерДома");
	ТДома.НоваяКолонка("Адрес");

	СпрДома = СоздатьОбъект("Справочник.Дома");
	СпрДома.ВыбратьЭлементыПоРеквизиту("Улица", Улица, 0, 0);
	//СпрДома.Выбрать(,);
	Пока СпрДома.ПолучитьЭлемент() = 1  Цикл

		Если СпрДома.ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;

		Дом = СпрДома.ТекущийЭлемент();
        //Сообщить(Дом);
		Если НомерДома = "" Тогда
			Возврат Дом;
		Иначе
			Если ВРег(СокрЛП(СтрЗаменить(Дом.Номер," ",""))) = ВРЕГ(СокрЛП(СтрЗаменить(НомерДома," ",""))) Тогда
			Возврат Дом;
			КонецЕсли;
		КонецЕсли;

	КонецЦикла;


			Возврат Дом;

КонецФункции	// НайтиДом

//________________________________________________________________________________________________________
Функция НайтиУлицу(СтрУлица) 
	
	СтрУлица=СокрЛП(СтрЗаменить(СтрУлица,"М.Удеровка","Мухоудеровка"));
	СтрУлица=СокрЛП(СтрЗаменить(СтрУлица,"М.Гезово","Матрено-гезово"));
	Улочки= СоздатьОбъект("Справочник.Улицы");	
	Улочки.ВыбратьЭлементы();
	Пока Улочки.ПолучитьЭлемент() = 1  Цикл
		
		Если Улочки.ЭтоГруппа() = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Улочка = ВРег(Улочки.ТекущийЭлемент());
		вУлица= ВРег(СтрУлица);
		Если (Найти(Улочка,вУлица)>0) Тогда
			Возврат Улочки.ТекущийЭлемент();
		ИначеЕсли (Найти(вУлица,Улочка)>0)Тогда
			Возврат Улочки.ТекущийЭлемент();
		КонецЕсли;
		
	КонецЦикла;
	
	
	Возврат 0;
	
КонецФункции	// НайтиУлицу

//________________________________________________________________________________________________________
Функция НайтиВСеле(СтрСело,СтрФИО) 
	Перем Запрос;
	
	ВыбУлица=НайтиУлицу(СтрСело) ;
	Если (ВыбУлица=0) Тогда Возврат 0; КонецЕсли;
	
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗапроса = "//{{ЗАПРОС(КлиентПоАдресу)
	|Клиент  = Справочник.Клиенты.ТекущийЭлемент;
	|Фамилия = Справочник.Клиенты.Наименование;
	|Улица   = Справочник.Клиенты.Дом.Улица;
	|Дом     = Справочник.Клиенты.Дом;
	|Кв      = Справочник.Клиенты.Кв;
	|Номер   = Справочник.Клиенты.Дом.Номер;
	|Группировка Клиент упорядочить по Клиент.КодКвартиры без групп;
	|Условие(Клиент.ПринадлежитГруппе(Выбывшие) = 0);
	|"//}}ЗАПРОС
	;
	ТекстЗапроса = ТекстЗапроса+"Условие(Улица = ВыбУлица);"; 
	ТекстЗапроса = ТекстЗапроса+"Условие(СокрЛП(Фамилия) = СтрФИО);";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Сообщить("Запрос не выполнен:" + ОписаниеОшибки());
	КонецЕсли;
	
	Пока Запрос.Группировка(1) > 0 Цикл
		//ФИОЗапрос=ВРег(СокрЛП(Запрос.Фамилия));
		//ФИОПоиск=ВРег(СокрЛП(СтрФИО));
		//Если (ФИОЗапрос<>ФИОПоиск) Тогда Продолжить; КонецЕсли;
		КлиентыЛицСчет = Запрос.Клиент.Код;
		Возврат КлиентыЛицСчет;
	КонецЦикла;
	Возврат 0;
	
КонецФункции	// НайтиВСеле
//________________________________________________________________________________________________________
Функция НайтиВСеле2(СтрСело,СтрФИО) 
	Перем Запрос;
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗапроса = "//{{ЗАПРОС(КлиентПоАдресу)
	|Клиент  = Справочник.Клиенты.ТекущийЭлемент;
	|Фамилия = Справочник.Клиенты.Наименование;
	|Улица   = Справочник.Клиенты.Дом.Улица;
	|Дом     = Справочник.Клиенты.Дом;
	|Кв      = Справочник.Клиенты.Кв;
	|Номер   = Справочник.Клиенты.Дом.Номер;
	|Группировка Клиент упорядочить по Клиент.КодКвартиры без групп;
	|Условие(Клиент.ПринадлежитГруппе(Выбывшие) = 0);
	|"//}}ЗАПРОС
	;
	ТекстЗапроса = ТекстЗапроса+"Условие(СокрЛП(Фамилия) = СтрФИО);";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Сообщить("Запрос не выполнен:" + ОписаниеОшибки());
	КонецЕсли;
	
	Пока Запрос.Группировка(1) > 0 Цикл

  		Улочка = ВРег(Запрос.Улица);
		вУлица= ВРег(СтрСело);
		Если (Найти(Улочка,вУлица)>0) Тогда
			Возврат  Запрос.Клиент.Код;
		ИначеЕсли (Найти(вУлица,Улочка)>0)Тогда
			Возврат  Запрос.Клиент.Код;
		КонецЕсли;

	КонецЦикла;
	Возврат 0;
	
КонецФункции	// НайтиВСеле2
//--------------------------------------------------------------------------------------------------
Функция НайтиПоФИОиДому(ВхНомДом,СтрФИО) 
	Перем Запрос;
	Запрос = СоздатьОбъект("Запрос");
	
	ТекстЗапроса = "//{{ЗАПРОС(КлиентПоАдресу)
	|Клиент  = Справочник.Клиенты.ТекущийЭлемент;
	|Фамилия = Справочник.Клиенты.Наименование;
	|Улица   = Справочник.Клиенты.Дом.Улица;
	|Дом     = Справочник.Клиенты.Дом;
	|Кв      = Справочник.Клиенты.Кв;
	|Номер   = Справочник.Клиенты.Дом.Номер;
	|Группировка Клиент упорядочить по Клиент.КодКвартиры без групп;
	|Условие(Клиент.ПринадлежитГруппе(Выбывшие) = 0);
	|"//}}ЗАПРОС
	;
	ТекстЗапроса = ТекстЗапроса+"Условие(СокрЛП(Фамилия) = СтрФИО);";
	
	Если Запрос.Выполнить(ТекстЗапроса) = 0 Тогда
		Сообщить("Запрос не выполнен:" + ОписаниеОшибки());
	КонецЕсли;
	
	Пока Запрос.Группировка(1) > 0 Цикл

  		НомДомВх = Число(ВхНомДом);
  		НомДомЗап = Число(Запрос.Дом.Номер);
		Если (НомДомВх=НомДомЗап) Тогда
			Возврат  Запрос.Клиент.Код;
		КонецЕсли;

	КонецЦикла;
	Возврат 0;
	
КонецФункции	// НайтиВСеле2
//--------------------------------------------------------------------------------------------------
Функция НайтиПоАдресу(Адрес) 
	Перем СпрКлиенты, СпрДома, СписокВыбывших;
	
	рез=0; НомДом="неа";
	Адрес=СокрЛП(СтрЗаменить(Адрес,"г Алексеевка",""));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"п Ольминского","Ольминского пос")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.Пос.колхоза Ольминского","Ольминского пос")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"п Опытная станция","Опытная станция")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"п Опытная станция, .","Опытная станция")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.Опытная станция","Опытная станция")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"г Алексеевка, станция Опытная","Опытная станция"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"Ст.Большевиков","Старых Большевиков")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"Пер. 5-й Славянский","Славянский 5-й пер"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.Пер. 8-е Марта"," 8 Марта пер"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.Ани Скоробогатько","Скоробогатько ул"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.Льва Толстого","Толстого ул"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"Ст.Разина","Разина")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.7-е Ноября","7 Ноября ул"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.8-е Марта","8 Марта ул")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"Пер. 8-е Марта","8 Марта пер")); 
	Адрес=СокрЛП(СтрЗаменить(Адрес,"ул.9-го Января","9 Января ул"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"К.Маркса","Маркса"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"М.Удеровка","Мухоудеровка"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"М.Гезово","Матрено-гезово"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,"Ст.Колодец","Студеный колодец"));
	Адрес=СокрЛП(СтрЗаменить(Адрес,",",""));
	
	Если (Найти(Адрес,"д.")<>0)  //выделяем улицу
	Тогда
		Назвул=Лев(Адрес,Найти(Адрес,"д.")-1);	
		Адрес=СокрЛП(СтрЗаменить(Адрес,Назвул,""));
	КонецЕсли;	
	
	Назвул=СокрЛП(СтрЗаменить(Назвул,",","")); 
	//Назвул=ВРег(Назвул);
	                       
	
	Если (Найти(Назвул,"1-й")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"1-й",""))+" 1-й";
	КонецЕсли;	
	

	Если (Найти(Назвул,"2-й")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"2-й",""))+" 2-й";
	КонецЕсли;	

	Если (Найти(Назвул,"3-й")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"3-й",""))+" 3-й";
	КонецЕсли;
	
	Если (Найти(Назвул,"4-й")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"4-й",""))+" 4-й";
	КонецЕсли;	
	
	Если (Найти(Назвул,"1-я")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"1-я",""))+" 1-я";
	КонецЕсли;	
	

	Если (Найти(Назвул,"2-я")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"2-я",""))+" 2-я";
	КонецЕсли;	
	
	//переставляем в конец тип улицы
	Если (Найти(Назвул,"ул.")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"ул.",""))+" ул";
	КонецЕсли;	
	
	Если (Найти(Назвул,"ул")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"ул",""))+" ул";
	КонецЕсли;	
	
	Если (Найти(Назвул,"станция")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"станция",""))+" станция";
	КонецЕсли;	
	
	Если (Найти(Назвул,"пер.")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"пер.",""))+" пер";
	КонецЕсли;	
    
	Если (Найти(Назвул,"Пер.")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"ул",""));
	 Назвул=СокрЛП(СтрЗаменить(Назвул,"Пер.",""))+" пер";
	КонецЕсли;	
	
	Если (Найти(Назвул,"пл.")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"ул",""));
	 Назвул=СокрЛП(СтрЗаменить(Назвул,"пл.",""))+" пл";
	КонецЕсли;	
	
	Если (Найти(Назвул,"Пл.")<>0) 
	Тогда Назвул=СокрЛП(СтрЗаменить(Назвул,"ул",""));
	 Назвул=СокрЛП(СтрЗаменить(Назвул,"Пл.",""))+" пл";
	КонецЕсли;	

	
	естьТочка=Найти(Назвул,".");  //отбрасываем инициал
	символов=СтрДлина(Назвул);
	Если (естьТочка<>0) 
	Тогда 
		Назвул=Прав(Назвул,символов-естьТочка);
	КонецЕсли;	
	
	

	
	//Сообщить (Назвул);
	//Сообщить (Адрес);
	
	
	
	естьКв1=Найти(Адрес,"кв.");
	естьДом=Найти(Адрес,"д.");
	Если (естьДом<>0) 
	Тогда  
		НомДом=СокрЛП(Сред(Адрес,естьДом+2));
		Если (естьКв1<>0) 	
		Тогда  
			
			НомДом=Лев(НомДом,Найти(НомДом,"кв")-1);	
		Иначе
			//НомДом=Лев(НомДом,Найти(НомДом," "));
		КонецЕсли;	
	КонецЕсли;	
	
	
	естьКв=Найти(Адрес,"кв.");
	Если (естьКв<>0) 
	Тогда  
		НомКв=СокрЛ(Сред(Адрес,естьКв+3));

	КонецЕсли;	

	нашелдом=0;
	
	СпраДома = СоздатьОбъект("Справочник.Дома");
	СпраДома.ВыбратьЭлементы(0);
	нашелдом=СпраДома.НайтиПоНаименованию((Назвул+" д."+НомДом),0,1);
	
	Если  нашелдом=0    
	тогда  	Домик = НайтиДом(Назвул, НомДом); 
	иначе  Домик = СпраДома.ТекущийЭлемент();	
	Конецесли;
	
	Если (сокрЛП(Домик)="")  тогда Возврат 0; Конецесли; 
	
	СпрКлиенты = СоздатьОбъект("Справочник.Клиенты");
	СпрКлиенты.ИспользоватьДату(ТекущаяДата());

	
	Если ПустаяСтрока(НомКв) = 0 Тогда
		//Сообщить(Назвул);
		попытка
			сКодКвартиры = СтрКодКвартиры(Домик, НомКв);
		исключение// сообщить(Домик);
		конецпопытки ;
		СпрКлиенты.ВыбратьЭлементыПоРеквизиту("КодКвартиры", сКодКвартиры, 0, 0);
		Пока СпрКлиенты.ПолучитьЭлемент() > 0 Цикл
			Если (СпрКлиенты.ЭтоГруппа() > 0) Тогда
				Продолжить;
			КонецЕсли;
			рез=СпрКлиенты.Код;
			//
		КонецЦикла; 
	иначе 
		СпрКлиенты.ВыбратьЭлементыПоРеквизиту("Дом", Домик, 0, 0);
		Пока СпрКлиенты.ПолучитьЭлемент() > 0 Цикл
			Если (СпрКлиенты.ЭтоГруппа() > 0) или (СокрЛП(СпрКлиенты.Родитель)="Выбывшие") Тогда
				Продолжить;
			КонецЕсли;
			рез=СпрКлиенты.Код;
			//
		КонецЦикла; 
	КонецЕсли;
	
	    //Если (рез=0)тогда Сообщить(Назвул) КонецЕсли;
		
		Возврат рез;
		
КонецФункции		//	НайтиПоАдресу()  

//________________________________________________________________________________________________________

//
Процедура ЗаполнитьЕДК()
	
	
	
	Если ФС.СуществуетФайл(ФормИмяФайлаДанных) = 0 Тогда 
		Предупреждение ("Файл не найден"); 
	Иначе  КонецЕсли;
	Кат= ФС.ТекКаталог();
	ИмяФ=СокрЛП(СтрЗаменить(ФормИмяФайлаДанных,Кат,""));
	если (СтрДлина(ИмяФ)>8) тогда
		НовИмяФ=Сред(ИмяФ,1,4)+"_"+Сред(ИмяФ,СтрДлина(ИмяФ)-5,2)+".dbf";
		НовПолнИмяФ=Кат+НовИмяФ; 
		СтарПолнИмяФ=Кат+СтрЗаменить(ИмяФ,"E","_"); 
		ФС.ПереименоватьФайл(ФормИмяФайлаДанных,НовПолнИмяФ,1);
		ФормИмяФайлаДанных=НовПолнИмяФ;
	конецЕсли;
	ТТХ.Очистить();
	
	
	Сообщить(НовПолнИмяФ);
	Если (ДБФ.Открыта()=0) Тогда ДБФ.ОткрытьФайл(ФормИмяФайлаДанных); КонецЕсли;
	Если  (ДБФ.Открыта()=0) Тогда Предупреждение("Файл не открыт"); Возврат КонецЕсли;
	
	
	Клиенты=СоздатьОбъект("Справочник.Клиенты");
	ед=1; нул=0;	ПусДата=ПолучитьПустоеЗначение("Дата");
	потреблен=0; ненайдено=0;
	полей=ДБФ.КоличествоПолей();
	кусков=(полей-24)/20;
	кусков=окр(кусков);
	//Сообщить(кусков+" услуг");
	
	ДБФ.Перейти(1);
	контора= СокрЛП(ДБФ.ПолучитьЗначениеПоля("PRED"));
	//сообщить(контора);
	
	ДБФ.Предыдущая();     
	конн= ДБФ.КоличествоЗаписей(); 
	Если (конн<500) тогда тип="суб" иначе тип="едк" КонецЕсли;
	ВсегоСъели=0; БезНачислений=0; БезОплат=0;
	
	Для ш=1 по конн Цикл
		ДБФ.Перейти(ш);
		Состояние(Строка(ш)+" из "+строка(конн));
		Съели=0;  оплата = 0;
		
		лицсчет=0;
		лицсчетРКЦ=0;
		лицсчетГаз=0;
	    нашелКлиента=0;
		
		Для м=1 по кусков Цикл   //имеется ли ЛС хоть в каком-нибуть столбце? 
			Поле="LCHET_" + Строка(м);
			Счетик= СокрЛП(ДБФ.ПолучитьЗначениеПоля(Поле));
			Если (Счетик="") Тогда Продолжить; КонецЕсли;
			Если (СтрДлина(Счетик)=6) Тогда лицсчет=Счетик; КонецЕсли;
			Если (СтрДлина(Счетик)=10) Тогда лицсчетРКЦ=Прав(Счетик,8); КонецЕсли;
			Если (СтрДлина(Счетик)=9) Тогда лицсчетГаз=Счетик; КонецЕсли;
		КонецЦикла;  //от 1 до 8
	
	//	Если (СокрЛП(ДБФ.LCHET_1)<>"100519206") Тогда  Продолжить; КонецЕсли;
		
		нашелПоКоду=0;
		нашелПоФИО=0;
		
		Если (флПКУ=1) тогда
			попытка
				Поле="PKU";
				ИхКодУСЗН= СокрЛП(ДБФ.ПолучитьЗначениеПоля(Поле));
				нашелКлиента=Клиенты.НайтиПоРеквизиту("КодУСЗН",ИхКодУСЗН,1);
			исключение 
				флПКУ=0;
			конецпопытки;  		
			
		КонецЕсли;
		
		Если (нашелКлиента=0) Тогда  //поиск по лицевым счетам
			если (лицсчет<>0)Тогда
				нашелКлиента=Клиенты.НайтиПоКоду(Счетик,0); 
			иначеесли (лицсчетГаз<>0)  Тогда
				нашелКлиента=Клиенты.НайтиПоРеквизиту("ЛицСчетВода",лицсчетГаз,1);
			конецесли; 
			Если (нашелКлиента<>0) Тогда  нашелПоКоду=1; КонецЕсли;
		КонецЕсли; 
		
		ИХФИО=СокрЛП(ДБФ.Famil_LCH) +" " + СокрЛП(ДБФ.IMJA_LCH) + " " + СокрЛП(ДБФ.OTCH_LCH);
		
		Если (нашелКлиента=0) Тогда  //поиск по ФИО
				нашелКлиента=Клиенты.НайтиПоНаименованию(ИХФИО,0,1);
			Если (нашелКлиента<>0) Тогда  нашелПоФИО=1; КонецЕсли;
		КонецЕсли; 

		
		былоснова=0; 
		ИхСело="";
	
	~снова:	
		Если (нашелКлиента=0) Тогда  //поиск по адресу
			ИхАдрес="ул."+СокрЛП(ДБФ.YLIC)+" д."+СокрЛП(ДБФ.NDOM);
			Если (СокрЛП(ДБФ.NKW)<>"") Тогда ИхАдрес=ИхАдрес+ " кв."+СокрЛП(ДБФ.NKW) 	КонецЕсли;
			ИхАдрес1=ИхАдрес;
			НашЛС=НайтиПоАдресу(ИхАдрес);
			нашелКлиента=Клиенты.НайтиПоКоду(НашЛС,0);
		Иначе 	
		КонецЕсли;
		
		Если (нашелКлиента=0)и (Найти(СокрЛП(ДБФ.NASP),"с.")=0) Тогда //по ФИО и дому
			НашЛС=НайтиПоФИОиДому(ДБФ.NDOM,ИХФИО);
			нашелКлиента=Клиенты.НайтиПоКоду(НашЛС,0);
			сообщить("НайтиПоФИО/"+строка(нашелКлиента)+" строка "+строка(ш)+" из "+строка(конн));
		КонецЕсли;	
		
		Если (нашелКлиента=0)и (Найти(СокрЛП(ДБФ.NASP),"с.")>0) и (нашелПоФИО=1)  Тогда //в селе1
			ИхСело=СтрЗаменить(СокрЛП(ДБФ.NASP),"с.","");
			НашЛС=НайтиВСеле(ИхСело,ИХФИО);
			нашелКлиента=Клиенты.НайтиПоКоду(НашЛС,0);
			сообщить("НайтиВСеле/"+строка(нашелКлиента)+" строка "+строка(ш)+" из "+строка(конн));
		КонецЕсли;	

		
		Если (нашелКлиента=0) и (Найти(СокрЛП(ДБФ.NASP),"с.")>0) и (нашелПоФИО=1) Тогда //в селе2
			ИхСело=СтрЗаменить(СокрЛП(ДБФ.NASP),"с.","");
			НашЛС=НайтиВСеле2(ИхСело,ИХФИО);
			нашелКлиента=Клиенты.НайтиПоКоду(НашЛС,0);
			сообщить("НайтиВСеле2/"+строка(нашелКлиента)+" строка "+строка(ш)+" из "+строка(конн));
		КонецЕсли;	
		
		Если (нашелКлиента=0) и (ФлПроп=0) Тогда    //выбираем вручную кого не нашли
			адресок=СокрЛП(ИхСело+"/"+ИхАдрес1);
			Подсказка =" выберите клиента "+ИХФИО+" по адресу "+адресок;
			Сообщить(Подсказка);
			
			Если  (Клиенты.Выбрать(Подсказка,)=0) Тогда
				Ответ=Вопрос("Пропустить строку и продолжить?",4);
				Если (Ответ=6) //"Да" - пропускаем 
				Тогда 
				Иначе Возврат ;  
				КонецЕсли	;
			Иначе нашелКлиента=1;	
			КонецЕсли;
			
		КонецЕсли;
		
		
		
		Если (нашелКлиента=0)	Тогда
			Ошибок=ошибок+1; Сообщить("Не найден счет клиента " +ИХФИО+"/"+СокрЛП(ИхСело+"/"+ИхАдрес1)); ненайдено=ненайдено+1;
			ТТХ.ДобавитьСтроку("Не найден счет клиента " +ИХФИО+"/"+СокрЛП(ИхСело+"/"+ИхАдрес1)); 
		Иначе
			домнаш=Строка(ЧИсло(СокрЛП(Клиенты.дом.номер))) ;
			домИх=Строка(ЧИсло(СокрЛП(ДБФ.NDOM))) ;
			Если (домнаш<>домИх) и (СокрЛП(Клиенты.дом.номер)<>"") и (домИх<>"0")  Тогда 
				Сообщить(Строка(Клиенты.Код)+Клиенты.Наименование+ИХФИО+" не совпадает дом / "+домнаш+" / "+домИх);
				Если (былоснова=0) Тогда нашелКлиента=0; нашелПоКоду=0; былоснова=1; Перейти ~снова; КонецЕсли;
				
				
			Конецесли;
				Поле="ILCHET" ;
				ДБФ.УстановитьЗначениеПоля(Поле,Клиенты.ЛицСчетВода); 

		КонецЕсли; 
		

		Для м=1 по кусков Цикл  
			         
			ОплКл=0;  НачислКл=0;
			Если  (нашелКлиента=0) Тогда 
			  Перейти ~pr;
			КонецЕсли;
			
			
			
			ДатаСверки = ДБФ.DatN;
	//	ДатаСверки = "01.05.2018";	
			
			
			Поле="GKYSL_" + Строка(м);       //определяем по чем искать услугу
			НазвУсл= СокрЛП(ДБФ.ПолучитьЗначениеПоля(Поле));
			Если (НазвУсл="Электроснабжение МОП")  Тогда  НазвУсл="_Электро" Конецесли;
			//Если (Найти(НазвУсл,"ОДН Элек-гия")<>0)  Тогда  НазвУсл="_Электро" Конецесли;
			Если (Найти(НазвУсл,"Вывоз тверд")>0)  Тогда  НазвУсл="Мусор" Конецесли;
			Если (Найти(НазвУсл,"Вывоз бытов")>0)  Тогда  НазвУсл="Мусор" Конецесли;
			Если (НазвУсл="Канализация")  Тогда  НазвУсл="Водоотведение" Конецесли;
			Если (НазвУсл="ЖБО")  Тогда  НазвУсл="Водоотведение" Конецесли;
			НазвУсл= ВРег(Лев(НазвУсл,5));
			//Сообщить(НазвУсл + Клиенты.Код); 
			
			КоличКл= Количество (Клиенты.ТекущийЭлемент(),ДатаСверки, НазвУсл);
			Если (Найти(НазвУсл,"ЛЕК")=0) тогда
			Если (КоличКл>100) Тогда Предупреждение("Подозрительно болшое потребление /"+Строка(КоличКл)+"/ на лиц.счете "+Клиенты.Код+" пропускаем!"+НазвУсл); Продолжить; КонецЕсли;
			КонецЕсли;
			Поле="Fakt_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,КоличКл); 
			
			ОплКл= ОплатилУсл (Клиенты.ТекущийЭлемент(),ДатаСверки, НазвУсл,0);
			Поле="SUMOPL_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,ОплКл); 
			оплата=оплата+ОплКл;
			

			
			НачислКл= НачисляетсяУсл (Клиенты.ТекущийЭлемент(),ДатаСверки, НазвУсл);
			Если (НачислКл<0) Тогда НачислКл=0; КонецЕсли;
			//потреблен=потреблен+НачислКл;
			Поле="SUMTAR_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,НачислКл); 
			Съели=Съели+НачислКл;
			
			
			
			ТарифКл= Число(ТарифУсл (Клиенты.ТекущийЭлемент(),ДатаСверки, НазвУсл));
			//Сообщить(ТарифКл);
			Поле="TARIF1_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,ТарифКл);
			Поле="TARIF2_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,ТарифКл); 
			
			Если (Найти(НазвУсл,"ЛЕК")<>0) и (ТарифКл>0) тогда   //попросили специально для этой услуги УСЗН
			КоличКл= ОплКл/ТарифКл; 
			Поле="Fakt_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,КоличКл); 
			КонецЕсли;
			
			//если (НачислКл>0) или (ОплКл>0) тогда
				Поле="LCHET_" + Строка(м);
				ДБФ.УстановитьЗначениеПоля(Поле,Клиенты.ЛицСчетВода); 
			//иначе	
			//	Поле="LCHET_" + Строка(м);
			//	ДБФ.УстановитьЗначениеПоля(Поле,"");
			//конецесли;
			
			
			Поле="DatDolg_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,ПусДата);
			Поле="SUMDolg_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,0);
			Поле="KOLDOLG_" + Строка(м);
			ДБФ.УстановитьЗначениеПоля(Поле,0); 
			
			
			СалдоВс= Сальдо(Клиенты.ТекущийЭлемент(),ТекущаяДата() );
			НачислВс= Начисляется (Клиенты.ТекущийЭлемент(),ТекущаяДата());
			
			
			Если (НачислВс<>0) Тогда 
				КолМес=  СалдоВс/НачислВс;
			//	Сообщить(строка(Клиенты.ТекущийЭлемент())+"/"+КолМес);
				
				Если (КолМес>1.9) и (тип="суб") Тогда 
					ДатаДога= ДобавитьМесяц(ТекущаяДата(),(0-КолМес)); 
					СальдоКл= СальдоУсл (Клиенты.ТекущийЭлемент(),ТекущаяДата(), НазвУсл);
					
					Если (СальдоКл>0) Тогда 
						
						Поле="DatDolg_" + Строка(м);
						ДБФ.УстановитьЗначениеПоля(Поле,ДатаДога); 
						
						Поле="SUMDolg_" + Строка(м);
						ДБФ.УстановитьЗначениеПоля(Поле,СальдоКл);
						
						
					КонецЕсли; //(СальдоКл>0)
					
				КонецЕсли; //(тип="суб")
				
				Если (КолМес>2.9) и (тип="едк") Тогда 
					ДатаДога= ДобавитьМесяц(ТекущаяДата(),(0-КолМес)); 
					СальдоКл= СальдоУсл (Клиенты.ТекущийЭлемент(),ТекущаяДата(), НазвУсл);
					
					Если (СальдоКл>0) Тогда 
						
						Поле="DatDolg_" + Строка(м);
						ДБФ.УстановитьЗначениеПоля(Поле,ДатаДога); 
						
						Поле="SUMDolg_" + Строка(м);
						ДБФ.УстановитьЗначениеПоля(Поле,СальдоКл); 
						
						Поле="KOLDOLG_" + Строка(м);
						ДБФ.УстановитьЗначениеПоля(Поле,КолМес); 
					
						
					КонецЕсли; //(СальдоКл>0)
					
				КонецЕсли; //(тип="едк")
				
			КонецЕсли; //(НачислВс<>0) 
			
		    ~pr:  Поле="Prizn_" + Строка(м);
            
			естьчо=КоличКл+ОплКл+НачислКл;
			
			Если (тип="едк")  Тогда 
				Если  (нашелКлиента=0) или (естьчо=0) Тогда 
					ДБФ.УстановитьЗначениеПоля(Поле,нул);  //в ЕДК призн это нашли или нет
				Иначе
					ДБФ.УстановитьЗначениеПоля(Поле,ед);
				КонецЕсли;
			ИначеЕсли (тип="суб")  Тогда     
				Если (ОплКл>0) Тогда
					ДБФ.УстановитьЗначениеПоля(Поле,ед);    // для субсидий призн это платил или нет
				Иначе 
					ДБФ.УстановитьЗначениеПоля(Поле,нул);
				КонецЕсли;
			КонецЕсли;// (тип="") 
			
			
		КонецЦикла;  //от 1 до 8
		
		
		ДБФ.Записать();
		Если (Оплата=0) тогда БезОплат=БезОплат +1;  КонецЕсли;
		Если (Съели=0) Тогда БезНачислений=БезНачислений+1; КонецЕсли;
		ВсегоСъели=ВсегоСъели+Съели; 
		
	КонецЦикла;  //перебор по записям
	ДБФ.ЗакрытьФайл();
	ТТХ.ДобавитьСтроку("Дата и время обработки файла обмена: "+Строка(ТекущаяДата())+"; "+Строка(ТекущееВремя()));
	ТТХ.ДобавитьСтроку("Общее количество записей в файле обмена: "+Строка(конн));
	ТТХ.ДобавитьСтроку("Не найдено записей: "+Строка(ненайдено));
	процентНенайдено=ОКР(ненайдено*100/конн,1); 
	ТТХ.ДобавитьСтроку("Не найдено процент: "+Строка(процентНенайдено));
	ТТХ.ДобавитьСтроку("Количество записей с нулевым объемом потребления: "+Строка(БезНачислений)); 
	процентНулевые=ОКР(БезНачислений*100/конн,1);
	ТТХ.ДобавитьСтроку("Нулевое потребление процент: "+Строка(процентНулевые));
	
	ТТХ.ДобавитьСтроку("Количество записей с нулевой оплатой: "+Строка(БезОплат));

	ТТХ.ДобавитьСтроку("Суммарный объем потребления: "+Строка(ВсегоСъели));
	ТТХ.ДобавитьСтроку(контора+" "+тип);
	
	ФС.ПереименоватьФайл(ФормИмяФайлаДанных,СтарПолнИмяФ,1);
	ФормИмяФайлаДанных=СтарПолнИмяФ;
	
	
	ИмяЛога= СтрЗаменить(СтарПолнИмяФ,"dbf","txt") ;
	ИмяЛога= СтрЗаменить(СтарПолнИмяФ,"DBF","txt") ;
	Если (Найти(ИмяЛога,"txt")>0) Тогда
	ТТХ.Записать(ИмяЛога); 
Иначе  ТТХ.Записать(ИмяЛога+".txt");
	КонецЕсли;
	Если (процентНулевые>50) или (процентНенайдено>50)
	тогда 
	Предупреждение("Процент без начислений ("+Строка(процентНулевые)+") или Процент ненайденых ("+Строка(процентНенайдено)+") слишком большое, из правильной ли базы заполняете?");
	иначе
	Предупреждение("Файл заполнен!",3);
	КонецЕсли;
	
КонецПроцедуры

	
//*******************************************
Процедура ЗаполнитьВсеФайлы()  
	считаем=0;
	ПервыйФайл=1;  
	ФормИмяФайлаДанных=КаталогИБ() +"ExtForms\Панель.ert";
	Сообщить("начал загрузку");
	
	ФС.УстТекКаталог(ФормИмяКаталога); 
	Если (СокрЛП(ФС.НайтиПервыйФайл("**.DBF"))="")  Тогда Сообщить("нет файлов"); Возврат; КонецЕсли;
	пока (ФС.СуществуетФайл(ФормИмяФайлаДанных)=1) цикл 
		
		считаем=считаем+1;  
		Если (считаем>30)  Тогда Прервать; КонецЕсли;
		
		Если (ПервыйФайл=1) Тогда
			ФормИмяФайлаДанных=ФС.НайтиПервыйФайл("**.DBF");
		Иначе 
			ФормИмяФайлаДанных=ФС.НайтиСледующийФайл();
		КонецЕсли; 
		
		Если (найти(ФормИмяФайлаДанных,"DBF")=0) или (найти(ФормИмяФайлаДанных,"_x")>0) или (найти(ФормИмяФайлаДанных,"rar")>0) 
		Тогда Продолжить;
		КонецЕсли;	
		
		
		Если (СокрЛП(ФормИмяФайлаДанных)="")  Тогда Сообщить("кончились файлы"); Прервать КонецЕсли;
		сообщить(ФормИмяФайлаДанных);
		сообщить (считаем);
		
		ФормИмяФайлаДанных=ФормИмяКаталога+"\"+ФормИмяФайлаДанных;
		ЗаполнитьЕДК() ; 
	
		
	конецЦикла; //для файлов 
	Предупреждение("Закончил заполнение");
		
		
	КонецПроцедуры //  ЗаполнитьВсеФайлы() 
//*******************************************

//*******************************************
КоэфНДС=1.18;
ФизЛица=СоздатьОбъект("Справочник.ФизЛица");
Выбывшие=СоздатьОбъект("Справочник.Клиенты");
Дома=СоздатьОбъект("Справочник.Дома");
Улицы=СоздатьОбъект("Справочник.Улицы");
ТипыЛьгот=СоздатьОбъект("Справочник.ТипыЛьгот");
ДБФ = СоздатьОбъект("XBase");
ДБУл = СоздатьОбъект("XBase");
ПоставщикиУслуг=СоздатьОбъект("Справочник.ПоставщикиУслуг");
ГруппаРасчетовОплата        = ГруппаРасчетов.Оплата; 
ГруппаРасчетовВсеНачисления = ГруппаРасчетов.ВсеНачисления;

ЖрнКв   = СоздатьОбъект("ЖурналРасчетов.Квартплата");
Жрн   = СоздатьОбъект("ЖурналРасчетов.Льготники");
СпрНач = СоздатьОбъект("Справочник.Начисления");
СпрЛУ = СоздатьОбъект("Справочник.ЛьготУслуги");     
ВыбНачПериода = Жрн.НачалоТекущегоПериода();
ВыбНачПериода = ДобавитьМесяц(ВыбНачПериода,-1);
ВыбКонПериода = КонМесяца(ВыбНачПериода);
Месяц = Формат(ВыбНачПериода, "ДДММГГ");
Месяц = глРазделить(Месяц,".");
ИмяФ = "Export";
ИмяФ =ИмяФ+".DBF" ;
ФормИмяФайлаДанных	=	"D:\" + ИмяФ;	
ФУл=1; ФлНдс=1; флПКУ=1; ФлПроп=1;
ТТХ = СоздатьОбъект("Текст");
Каталог = "D:\";
ИмяФайла="" ; 	

